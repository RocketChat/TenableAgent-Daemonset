apiVersion: v1 
kind: Namespace
metadata:
  name: tenable
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tenable-agent-daemonset
  namespace: tenable
spec:
  selector:
    matchLabels:
      name: tenable-agent-pod
  template:
    metadata:
      name: tenable-agent-pod
      labels:
        name: tenable-agent-pod
    spec:
      volumes:
        - name: access-to-node-files
          hostPath:
            path: /
        - name: tenable-config-json-with-key
          secret: 
            secretName: tenable-config-json-with-key
        - name: nessus-files-in-host
          emptyDir: {}
      initContainers:
      - name: mount-volumes
        image: rocketchat/darwiny:latest
        resources:
          limits:
            memory: "1000Mi"
            cpu: 1
          requests:
            memory: "1000Mi"
            cpu: 1
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
           - name: nessus-files-in-host
             mountPath: /mnt/nessus_files
           - name: tenable-config-json-with-key
             mountPath: /opt/config.json
             subPath: tenable-config-json-with-key
        command: ["sh", "-c"]
        args: 
        - |
          envsubst < /opt/config.json > /opt/nessus_agent/var/nessus/config.json
          cp -r /opt/nessus_agent/* /mnt/nessus_files/
      containers:
        - name: tenable-agent
          image: rocketchat/darwiny:latest
          resources:
            limits:
              memory: "1000Mi"
              cpu: 1
            requests:
              memory: "500Mi"
          volumeMounts:
             - name: access-to-node-files
               mountPath: /mnt/host_files
             - name: nessus-files-in-host
               mountPath: /mnt/host_files/opt/nessus_agent
          command: ["sh", "-c"]
          args:
          - |
            chroot /mnt/host_files /opt/nessus_agent/sbin/nessus-service